@import '../utilities/variables';

.epub-settings
{
    position: absolute;
    z-index: 1000000;
    right: 1.5rem;
    top: 1.5rem;

    display: flex;
    align-items: center;
    flex-direction: column;

    border-radius: 0.5rem;
    transition: 0.2s;
    cursor: pointer;

    opacity: 20%;

    @media (max-width: 500px)
    {
        top: 1rem;
        right: 1rem;
    }

    &:hover
    {
        opacity: 100%;

        & > svg
        {
            animation: rotate 4s infinite linear;
        }
    }

    // Affects only the cog svg because that's the 
    // only svg directly under 'epub-settings'.
    & > svg
    {
        width: 3rem;
        height: 3rem;

        @media (max-width: 500px)
        {
            width: 2.5rem;
            height: 2.5rem;
        }

        @keyframes rotate 
        {
            from 
            {
                transform: rotate(360deg);
            }
            to 
            {
                transform: rotate(0deg);
            }
        }
    }

    // The box-shadows need to match the reader's 
    // colorScheme, not the Library's colorMode. 
    &--Light
    {
        &:hover
        {
            box-shadow: 0.15rem 0.15rem 0.5rem $color_very_light_black;
        }
    }

    &--Dark
    {
        &:hover
        {
            box-shadow: 0.15rem 0.15rem 0.5rem $color_light_white;
        }
    }

    &--lm
    {
        background-color: $color_cyan;

        & > svg
        {
            fill: $color_light_cyan;
        }
    }

    &--dm
    {
        background-color: $color_very_dark_grey;

        & > svg
        {
            fill: $color_regular_grey;
        }
    }

    &__option-container
    {
        display: flex;
        align-items: center;
        flex-direction: column;
        width: 12rem;

        &--lm
        {
            & span, p
            {
                color: $color_white;
                text-shadow: 0.15rem 0.15rem 0.15rem $color_light_black;
            }
        }

        &--dm
        {
            & span, p
            {
                color: $color_dark_white;
                text-shadow: 0.15rem 0.15rem 0.15rem $color_immensily_dark_grey;
            }
        }

        & > div
        {
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: relative; 
            max-width: 100%;
            width: 100%;
            gap: 0.5rem;
        }

        & > div:not(:last-of-type)
        {
            padding-bottom: 1rem;
        }

        & span, p
        {
            font-size: 1rem;
            text-align: center;
            text-decoration: none;
            white-space: nowrap;
        }

        & > p
        {
            font-weight: bold;
        }
    }

    &__option-button
    {
        height: 2.25rem;
        width: 2.25rem;
        min-width: 2.25rem;
        border-radius: 0.5rem;
        padding: 0.25rem;
        transition: 0.2s;
        cursor: pointer;

        &--lm
        {
            background-color: $color_white;

            &:not(:disabled)
            {
                @include default-borders-light();
            }

            &:hover:not(:disabled)
            {
                background-color: $color_dark_white;
            }
        }

        &--dm
        {
            background-color: $color_dark_grey;

            & svg
            {
                color: $color_dark_white;
            }

            &:not(:disabled)
            {
                @include default-borders-dark();
            }

            &:hover:not(:disabled)
            {
                background-color: $color_mildly_dark_grey;
            }
        }
    }

    &__scroll-wrapper
    {
        width: 100%;
        height: 2rem;
        display: flex;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

    &__scrolling-text
    {
        animation: scrollText var(--scroll-duration) linear infinite;
        white-space: nowrap;
        position: absolute;
        top: 0.45rem;

        @keyframes scrollText 
        {
            0% 
            {
                transform: translateX(0);
            }
            50% 
            {
                transform: translateX(var(--scroll-distance)); 
            }
            100% 
            {
                transform: translateX(0); 
            }
        }
    }
}